In the simplest case, a recombination event is found when a read is mapped to two separate locations on the same gene and there are no other unmapped nucleotides present. Such an example is given in Table 1 (a). Here, a read that is 76 nt in length has been broken into two segments, each of which has been perfectly matched to the virus genome as denoted by its code '33M43M'. The first segment of 33 nt has been mapped to FHV RNA 1, nt 113-145, and all the remaining 43 nt have mapped to FHV RNA 1, nt 1003-1045. Therefore, this read maps across a single recombination event between nt 145 and 1003. In a similar manner, multiple or inter-species recombination events can also be detected [as in e.g. Table 1 (b or c) ]. ViReMa is also sensitive to complex recombination events, insertions, substitutions and can also map reads that contain short pads at either or both of the 5 0 and 3 0 end of the read. Examples of these are given in Table 1 . The exact site of recombination is sometimes ambiguous due to the inherent 'fuzziness' of recombination junctions. This occurs when the nucleotides immediately upstream of the acceptor site are identical to the nucleotides immediately upstream of the donor site. This leaves a number of possible sites where the original recombination event may have occurred but would still produce an identical resulting sequence. In ViReMa, such 'fuzzy' junctions can be reported either at the 5 0 end, the middle or at the 3 0 end of the fuzzy nucleotides present in the reference sequence, as chosen by the user using the --Defuzz parameter. Once each read has been scrutinized, each type of recombination event is tallied and these results are written to specific output files used for downstream analyses: Insertions, MicroInsertions, MicroDeletions, Recombination_Results, Single_Alignments, Substitutions, UnMappedReads and Unknown_ Recombinations. If both host and virus reference genomes are used, there will be one of each file for both reference genomes, plus an extra file for virus-to-host recombinations. 


Section:compiling and reporting results