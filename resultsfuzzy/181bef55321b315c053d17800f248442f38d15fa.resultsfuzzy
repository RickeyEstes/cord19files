The graph spectral snapshots are shown in Fig. 2 , and we can clearly see the expected merger and separation of two communities there. We can now interpolate from the third to the fourth data snapshot and then from fourth to the fifth data snapshot to further investigate this community merger and separation. Snapshots from the AI geodesic interpolation are shown in Fig. 3 ; the results from the linear and LE geodesic interpolations Fig. 2 Synthetic graph spectral plots, frames 1-7. The spectral plots of the synthetic data snapshots are presented in order from left to right, and top to bottom. They show two communities that are stable and separate except for the merger shown in the fourth frame. There are also nodes that do not associate closely with any community at various points in time were almost identical with these. Increasing the temporal resolution would become increasingly cumbersome for presentation in a printed format. However, the method does lend itself well to video presentations of the dynamic community behaviour (see Additional file 3 for an example). In interpolating the proteomics network data, we again obtained negative adjacency matrix entries (around 5% of the total entries). The AI geodesics produced far fewer such entries than the LE geodesics (by an order of magnitude), and the AI entries were usually smaller. Of the negative entries, the largest was -0.16, but less than 1% of the negative entries had magnitudes greater than 0.01. As with the synthetic graphs, we simply set these negative entries to 0 when using the Louvain method. Figure 8 shows how the number of graph communities varied over time and how different thresholding levels affected those results. With no thresholding, we found that Fig. 6 Communities in interpolated synthetic graphs. When no threshold is applied (top), the Louvain method produces varying numbers of communities during the merger of the two original communities, and even the data snapshot of the merged communities shows not one but four communities; we also see some differences between the two geodesic interpolations. With a threshold (bottom), though, the piece-wise constant nature of the interpolation shows forth the results were too connected (i.e., not enough communities) for all three interpolation methods: after leaving a supplied data point, the number of interpolated communities would immediately drop, remain relatively constant, and shoot up upon reaching the next data point. Thresholding produced better results. Generally speaking, the AI geodesic produced too many communities while the linear interpolation produced too few, and neither produced a steady deformation from one data point to the next. The LE geodesic showed an intermediate behaviour in this regard, and a threshold of 0.02 produced best performance. The number of communities produced by the interpolation did not vary smoothly, but there was a general progression from data point to data point. Changing the threshold value had a small effect on the AI geodesic, but it did nothing to improve the linear interpolation, and using a threshold value of 0.5 actually produced an odd spike in the number of communities halfway between data points. We will return to this phenomenon later. In looking at Fig. 8 , though, we see that there are many communities relative to the size of the graph -most of these are communities of one or two nodes that are not connected to the rest of the graph. If we only consider communities of a certain size, we can get a more accurate picture of the true community dynamics. In Fig. 9 , we look only at communities that contain at least five nodes and consider how the results are affected by different threshold values. When using a threshold value, the results are somewhat similar to those in Fig. 8. In Fig. 8 , there were too few communities because the graph was more connected, and we observe the effects of that increased connectivity here, too: there are fewer communities overall, but the communities that are present tend to be larger, and there are more large communities. The geodesic interpolations, on the other hand, were less connected. Therefore, they had had many small communities and relatively few larger ones; the best results came from the LE geodesic with a small threshold. The case without thresholds was more interesting. There, the linear interpolation still often produced too many communities, but the geodesic results did not uniformly produce too few communities. The LE geodesic may have been slightly better than the AI geodesic, but they were both still producing results that looked much more reasonable than they had when we plotted the total number of communities. In fact, those results look even more regular and smooth than the thresholded results. With some analysis, we can see why using a threshold value of 0.5 produced odd spikes in the number of communities for the linear interpolation. Let us assume that we are interpolating from adjacency matrix A 0 to adjacency matrix A 1 . Let us denote the edges in A 1 that are not in A 0 with the adjacency matrix A add and the edges in A 0 that are not in A 1 with the adjacency matrix A sub . Our linear interpolation from A 0 at t = 0 to A 1 at t = 1 would then be If we use a threshold τ such that matrix entries greater than τ are sent to 1 and entries less than or equal to τ are sent to 0, we get two possible interpolation patterns, each with three interpolated values. If τ < 0.5, then If τ ≥ 0.5, then A 0 −A sub will be less connected than either of the interpolation end points, and if τ = 0.5, then A(t) = A 0 − A sub only at t = 0.5. That is why we see that spike in the number of communities. The community similarity results are shown in Fig. 10 . With no thresholding, the linear interpolation performs best. Both of the geodesics tend to become even less similar to the previous snapshot than the snapshot they are progressing towards, resulting in a U-shape, whereas the linear interpolation has a more consistent decrease. All three interpolations, though, show a sharp decrease in similarity immediately after leaving a snapshot. Surprisingly, the LE geodesic also produces more extreme results than the AI geodesic. Thresholding produces the best result, and it does so with the LE geodesic and a threshold of 0.1. The linear interpolation once again shows its piecewise constant behaviour, but Fig. 10 Community similarity in interpolated proteomics network. When no threshold is applied (bottom right), the LE geodesic displays more extreme behaviour than the AI geodesic. A threshold of 0.1 (top right) gives the best performance for the geodesics, a threshold of 0.02 (top left) produces excessive variation in the LE geodesic, and a threshold of 0.5 (bottom left) produces almost piecewise constant behaviour in the geodesics. The linear interpolation produces reasonable results when no threshold is applied a threshold of 0.02 is no longer optimal for the LE geodesic, and the AI geodesic performs reasonably well at that threshold value. Plots of the energy of the interpolated graphs are shown in Fig. 11 . When no threshold is applied, the linear interpolation produces an almost linear progression, whereas both geodesic methods go through significant minima between data points. The geodesics are designed to interpolate Laplacian eigenvalue products linearly, whereas the linear interpolation produces a linear variation in the eigenvalue sum. Linearly changing the sum produces a concave change in the determinant, as we saw in Fig. 5 , and we can now see that linearly changing the product produces a convex change in the sum. The interpolations in question are being performed on the Laplacian, not the adjacency matrix, but we can see a clear connection. When we look at the thresholded results, we see that the linear interpolation consistently produces graphs with high energy values, the AI geodesic produces graphs with low energy values, and the LE geodesic is somewhere in the middle. For the LE geodesic, the best threshold value is around 0.02, where the interpolation produces a relatively steady change in graph energy from data point to data point (unlike the linear and AI geodesic interpolations, which basically plateau between points). This is consistent with what we saw in Fig. 8 and what we know about sparsity and the different interpolations. Finally, we can look at the average graphs calculated using the three different methods. Table 2 shows the number of communities for each of the averaged graphs, and Table 3 shows the number of communities with at least five nodes in those graphs. The average graph without thresholding showed a much higher level of connectivity than any of Fig. 11 Graph energy in interpolated proteomics network. Applying thresholds of 0.5 (bottom left), 0.1 (top right), and 0.02 (top left) produced the same kind of trends in the interpolations' graph energy as was the case in considering the number of communities: low-energy (i.e., less connected) graphs with the AI geodesic, high energy (i.e., more connected) graphs with the linear interpolation, and graphs of varying energy with the LE geodesic. Interpolation without a threshold (bottom right) gave similar performance for the geodesics the data snapshots, and this was the case for all of the averaging methods. This would make sense if the community structure changed significantly from snapshot to snapshot. Thresholding the average graph produced more reasonable results, though the AI average was highly disconnected, and the linear average showed a very large change in behaviour when the threshold dropped below 0.5. Table 3 records results congruent with those in Table 2 . With the linear mean graph, we see more communities with at least five members than any of the individual graph snapshots have -again, the linear interpolation produces results with increased connectivity. The Riemannian mean graphs without thresholds produce more reasonable numbers of communities, but applying a threshold to the geodesic means severely reduces those numbers. The most reasonable result with a threshold seems to be the LE mean with a threshold of 0.02 or the linear mean with a threshold of 0.5. Next, we can look at the average difference in community assignment between the mean graphs and the data snapshots in Table 4 . The linear mean performs better than the others when no threshold is used, but with a threshold, the best results come from the Riemannian means (which are almost identical). These values are quite high -both here and in the interpolation results shown in Fig. 10 -and this is likely due to the large number of unconnected nodes. The basic trends in the numbers of communities are reflected in the graph energies recorded in Table 5 : the linear averages have very high energy and the geodesic averages have very low energies, with the LE averages' energies slightly higher than the AI averages' . What is somewhat surprising, though, is the difference in graph energies between the non-thresholded means -the numbers of communities in each are similar, but the linear average has an energy roughly an order of magnitude higher than the Riemannian averages. The energy of the linear mean without thresholding or with a threshold of 0.5 seem to be the most reasonable values. In concluding our observations about these averages, we note that the weights on the linear average graph will all have weights that are multiples of 1/7 (because there are seven data points provided), and thus there will be no difference in results for any two thresholds that lie between n 7 and n+1 7 . This explains why the results for threshold values of 0.02 and 0.1 are the same for the linear average, for example. The geodesic interpolations provide no such structure, and our results here would suggest that low thresholds are generally required to get good results out of the geodesic interpolations. 


Section:synthetic graph results
Section:proteomics network results