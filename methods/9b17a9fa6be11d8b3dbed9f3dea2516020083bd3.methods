FastViromeExplorer, written in Java, has two main steps, (1) the read mapping step where all reads are mapped to a reference database, and (2) the filtering step where the mapping results are subjected to three major filters (detailed later) for output of the final annotation results on virus types and abundances. The input of the read alignment step is raw reads (single-end or paired-end) in fastq format. FastViromeExplorer uses the reference database downloaded from NCBI containing 8,957 RefSeq viral genomes as default but can also use any updated or customized databases as reference. A pre-computed kallisto index file, generated for the 8,957 genomes, is distributed with FastViromeExplorer. First, FastViromeExplorer calls kallisto [2] as a subprocess to map the input reads against the reference database. Kallisto was developed to map RNA-seq data to a reference transcriptome (all the transcripts for a genome) leveraging the pseudoalignment process and estimate the abundance of the transcripts using the Expectation-Maximization (EM) algorithm [5] . As there is no actual sequence alignment of the entire read over the reference sequences, the pseudoalignment process enables read mapping to be both lightweight and superfast. For example, kallisto was able to map and quantify 30 million paired-end RNA-seq reads for the human transcriptome in less than 10 minutes on a small laptop computer with a 1.3-GHz processor [2] . In addition to the ultrafast speed, kallisto also gives accurate estimation of abundance of each transcript or reference sequence [25, 28] . Consequently, kallisto could provide an ideal tool for virus type and abundance annotation in metagenomics samples that commonly have tens of millions of reads, mapping of which using commonly used programs such as BLAST can be time-consuming and often infeasible without computer clusters. Therefore, FastViromeExplorer deploys kallisto for the purpose of read mapping and abundance estimation of the annotated viruses. The k-mer size in kallisto can be altered depending on user's need, and experiments have shown that the default size 31 works well for metagenomics data and is therefore kept as default also in FastViromeExplorer. After the first alignment step, FastViromeExplorer takes the output of kallisto that includes information of the aligned reads together with estimated abundances or estimated read counts of all the identified viruses for the processing of the second step. The second step filters the output of the first step using three criteria, introduced to ensure the annotation quality and especially to reduce the number of false positive annotations. In detail, the first criterion, hereafter referred to as "R", is based on the ratio of the observed extent of genome coverage with the expected extent of genome coverage, computed as C o is the observed extent of genome coverage by the mapped reads, computed as where L s is the actual length of the genome that is supported or covered by the mapped reads and L g is the length of the genome. C e is the expected extent of genome coverage, assuming a Poisson distribution for the mapped reads along the genome, and therefore, where N is the number of mapped reads to the genome, L r is the read length, and L g is the length of the genome. If a virus has R < 0.3, FastViromeExplorer discards the virus. This criterion is motivated by the observation that some annotated viruses only have reads mapped to the repeat regions of their genomes. For example, while analyzing the fecal samples from Lee et al. [14] , we found that for the BeAn 58058 virus (NC 032111.1), all the reads were mapped to one particular region of its genome, from 8,200 bp to 8,700 bp (see supplementary figure 1 ). Analyzing this region using RepeatMasker [27] revealed that it is a simple repeat region and falls into the class of Alu elements. If the virus is truly present in the sample, we expect reads to be mapped to not only the repeat region but also other regions of the genome. Therefore, finding this virus is likely an artifact caused by the prevalence of repeat regions instead of real biological signals. By imposing this criterion, we filter out any virus for which all the reads are mapped to a repeat region of the virus genome. If a virus is truly present in the sample, the mapped reads to the virus should come from random locations of the genome, assuming that the mapped reads follow a Poisson distribution along the genome, the expected coverage of the virus genome C e can be computed by Equation (3). If the reads are all mapped to a repeat region, the observed coverage of the virus genome C o is expected to be much lower than C e , as a result, R is low and by imposing a cutoff of 0.3 (determined based on our empirical analyses), viruses that have reads mapped to only repeat regions get filtered out. The second criterion requires C o ≥ 0.1, that is, a virus that has C o < 0.1 is discarded. This criterion requires that the mapped reads should cover at least 10% of the viral genome. Manual inspection of the annotation results reveals that very large viruses may have several repeat regions in their genomes and as a result, though all the reads are mapped to the repeat regions, they are mapped to different repeat regions. In these cases, the difference between C o and C e may be small and therefore R can be high enough to pass the first filter. However, it is very likely that the annotation is simply an artifact of repetitive sequences. For example, while analyzing the fecal samples [14] , we found that Pandoravirus dulcis (NC 021858.1), a very large virus with 1,908,524 bps, has several repeat regions, and all the reads were mapped only to the repeat regions (see supplementary figure 2 ). Hence, to alleviate this annotation artifact, C o ≥ 0.1 is used as the second filter. As repeat regions of a virus usually cover less than 10% of the genome [19] , if any virus is covered for more than 10% by the reads, it is reasonable to assume that the reads are not merely from repeat regions and thus the virus should be considered in the annotation result. The third criterion is based on the number of mapped reads N . Extensive empirical analysis and inspection of the annotation results show that for very small viruses, only a few reads are enough to cover a good portion of the viral genome, resulting in high R and C o that pass criteria 1 and 2. For example, in the fecal samples [14] that we annotated, four reads were mapped to Rose rosette virus RNA3 (NC 015300.1). As the virus has only 1,544 bps, four reads of length 150 bps were enough to pass criteria 1 and 2. But as only a handful of reads are mapped, it is likely that the virus is false positive. To be more stringent, FastViromeExplorer applies the third filter requiring the number of mapped reads to be greater than 10, and therefore discards the ones with N < 10. After applying all the filters, FastViromeExplorer outputs the final result that contains a list of identified viruses in the given sample along with the estimated read count or abundance and taxonomy of the viruses. The output list is sorted by the abundance with the most abundant viruses on the top of the list. It is worth noting that the three criteria are introduced to alleviate annotation artifacts caused by factors such as repeat sequences and low genome coverage, the actual cutoff values for R, C o , and N are based on our empirical experience and literature observation, and depending on the specific studies and the need of users, the cutoff values used here might not be suitable. To allow for flexibility and customization, FastViromeExplorer incorporates these three filters as parameters so that users can easily adjust the values to adapt to their own studies. For example, users can deploy more stringent criteria by setting higher values for R, C o , and N than the default, to get a "high confidence" set of viruses. FastViromeExplorer was run on both simulated and real data to examine its running time and accuracy. FastViromeExplorer used kallisto (version 0.43.1) with default settings and generated pseudoalignment results in sam format and filtered abundance results in a tab-delimited file. The abundance results contain identified virus names, NCBI accession numbers, NCBI taxonomic path, and estimated read counts. FastViromeExplorer was run on two different reference databases, the default database distributed together with FastViromeExplorer, that is, the NCBI RefSeq database containing 8,957 genomes of eukaryotic viruses and phages, and the set of sequences collected from the JGI "earth virome" study [18] containing 125,842 metagenomic viral contigs (mVCs). The taxonomic annotation and host information for these mVCs were collected from the IMG/VR database [17] . In addition to the challenge of mapping 10s or 100s of millions of metagenomic reads, tools for the accurate identification and quantification of viral genomes must also be capable of handling ever-growing reference databases of viral sequences. In order to measure how the indexing step of kallisto scales with reference databases of different sizes, kallisto was applied to index five different databases. Three databases were generated from NCBI RefSeq viral database, one containing only phages (2,187 phage genomes), one containing only eukaryotic viruses (6,770 eukaryotic virus genomes), and one containing both phages and eukaryotic viruses (8,957 viral genomes). The other two databases were created from sequences collected from Paez-Espino et al. [18] , one containing all the 125,842 mVCs and the other containing half of the mVCs. The time analysis of kallisto's indexing step was produced on a Linux based cluster with 64 CPUs and 128 GB RAM. The indexing step was run using default k-mer size 31 and default number of threads 1. The precomputed kallisto index file for the full 125,842 mVCs from JGI is available here: https://bioinformatics.cs.vt.edu/zhanglab/software/FastViromeExplorer/. To evaluate the performance of FastViromeExplorer, we compared speed and accuracy with ViromeScan, a recently developed virus annotation pipeline that calls BOWTIE2 as a subprocess for read mapping, that was shown to be 1,000 times faster than previous tools [20] . ViromeScan was run with default settings and with the eukaryotic DNA/RNA virus database containing 4,370 genome sequences, the largest reference database provided by ViromeScan, and with a custom database consisting of the 125,842 mVCs from JGI. ViromeScan generated alignment results and abundances of viruses at family, genus, and species level. We also ran Blastn (version ncbi-blast-2.6.0+) using both the NCBI RefSeq viral database and the large JGI database. Blastn only generated the alignment result in text format. All the time analyses were calculated using elapsed real time from Unix's time command. To examine the annotation accuracy of FastViromeExplorer, simulated metagenomic data were used. A randomly selected collection of genomes containing 4000 virus genomes and 2000 bacteria genomes were obtained from NCBI RefSeq database. Four paired-end read datasets, each containing one million reads of length 100bps, were generated from these genomes using the read simulator WGSIM (https://github.com/lh3/wgsim). For all the datasets, 49% reads were from viruses and 51% from bacteria. The four datasets were generated using 1% sequencing error rate and 3%, 5%, 7%, or 10% mutation rates respectively. ViromeScan and Blastn were also applied to these four datasets. As ViromeScan uses eukaryotic viruses as the reference database, for comparison, both FastViromeExplorer and Blastn were run on a reference database containing only NCBI RefSeq eukaryotic viruses. ViromeScan was run with the eukaryotic virus database provided by ViromeScan. Under the default setting, ViromeScan removed all the mapped reads during its quality filtering and trimming step (trimBWAstyle.pl script) and did not produce any results. Therefore, it was run without ViromeScan's quality filtering and trimming step. With the ground truth for the alignment of the reads, recall, precision, and F1 score were calculated using the following formula: To examine the running time and annotation performance of FastViromeExplorer on real data, the fecal metagenomics datasets described in Lee et al. [14] were downloaded from NCBI under the accession number SRP093449 and annotated with both FastViromeExplorer and ViromeScan. The study tracked bacteria colonization in a fecal microbiota transplantation (FMT) experiment through analyzing metagenomics data. To examine how the viruses/bacteriaphages were affected by the transplantation, we reanalyzed the four fecal metagenomic samples collected from a healthy donor and three samples from a recipient patient suffering mild/moderate ulcerative colitis. The three samples for the recipient were collected prior to FMT, four weeks after FMT, and eight weeks after FMT, respectively. All the reads were Illumina paired-end reads with 150bp read length. Seven data sets of different sizes (1, 3, 5, 10, 20, 30, and 40 million reads) were also generated from the samples and annotated by FastViromeExplorer and ViromeScan to compare their running time on large datasets. To examine the effect of the reference database on annotation results, FastViromeExplorer was applied to the samples using two different reference databases, FastViromeExplorer's default reference database and the set of 125,842 mVCs collected from the study [18] . While using the NCBI RefSeq database as reference, a Linux based laptop with Intel core i5-3230M CPU @ 2.60 GHz * 4 processors and 12 GB RAM was used to produce the results, and while using the 125,842 mVCs as reference, a Linux based cluster with 64 CPUs and 128 GB RAM was used to produce the results. While using the cluster, only 1 thread was used to run the tools.  