The LZ algorithm was developed to analyze the complexity of linear sequences by Lempel and Ziv [12] . Lempel-Ziv (LZ) complexity of a sequence is measured by the minimal number of steps required for its synthesis in a certain process. For each step only two operations are allowed in the process: either generating an additional symbol which ensures the uniqueness of each component or copying the longest fragment from the part of a synthesized sequence [13] . In recent years, some authors applied the algorithm to compare sequences and construct phylogenic trees. For instance, Otu and Sayood applied the LZ algorithm to phylogenic analysis and had successfully constructed phylogenic trees for real and simulated DNA data sets [10] . Liu and Wang take the physicochemical properties of amino acids into account, and used the LZ algorithm to construct phylogenic trees [14] . In this study, the measure of relative LZ complexity between two sequences is proposed according to the principle of the LZ complexity. The LZ complexity distance metric between two nonnull sequences is defined by utilizing relative LZ complexity. Next, we will give some basic definitions and properties about relative LZ complexity. Let the sequence S = S 1 S 2 Á Á ÁS n , l(S) = n represents the length of S, the subsequence S i S i+1 Á Á ÁS j of S be denoted as S(i, j). The set that contains all subsequence S(i, j) is called the vocabulary v(S) of S. Note that S(i, j) = u, for i > j . Let S = S 1 S 2 Á Á ÁS n be a non-null sequence, then produce S from null sequence according the following algorithm [15] . (1) At the beginning we have a null-sequence u, then add prefix S = S 1. If n > 1, need add a dot after S 1 . (2) Let a prefix Q = S 1 S 2 Á Á ÁS r , 0 < r < n be available, check if R = S r+1 can be reproduced from S(1, r), or if R cannot reproduced from a subsequence of S(1, r), then join Q and R to get a new prefix QR, and add a dot following QR. If R = S r+1 can be reproduced from a subsequence of S(1, r), then check again if R = S r+1 S r+2 can reproduced from S(1, r + 1). If so, check again if R = S r+1 S r+2 S r+3 can reproduced from S(1, r + 2)Á Á Á and so on. There two possible cases: In the case R = S r+1 Á Á ÁS n , then we end the procedure, and get new prefix QR = S, in another case R = S r+1 Á Á ÁS k cannot be reproduced from any subsequence of S(1, k -1), then get a new prefix QR and add a dot behind it. (3) Repeat the step (2) until produce S. This algorithm is the LZ algorithm. Then, the sequence S can partition into some subsequences that arrange one after another. Denote this partition as follows: Lempel and Ziv proved the exclusive partition about H LZ and defined the LZ complexity C LZ (S) of S as the number of subsequence in Given two sequences Q, R, according to the theory of Lempel and Ziv about sequence partition, we can also partition sequence Q into the subsequences one after another, called it relative partition of sequence Q corresponding to sequence R. Denote it as follows: H LZ (Q|R) satisfies the following three properties: (1) h 0 = 0; (2) 81 6 k 6 ðm 0 À 2Þ; Q ðh k þ 1; h kþ1 À 1Þ 2 vðRÞ; Qðh k þ 1; h kþ1 Þ R vðRÞ; The complexity r LZ (Q|R) of Q corresponding to sequence R is the number of subsequence in H LZ (Q|R), namely r LZ (Q|R) = m 0 . This relative partition is also exclusive. In order to compute the relative LZ complexity of Q, we only need to add the sequence R as the prefix of sequence Q. The flow diagram for the algorithm to calculate r LZ is shown by Figure 1 . The time complexity of this algorithm is Clearly, 1 6 r LZ ðQ jRÞ 6 lðQ Þ. If Q which deletes its last character is subsequence of R, the result is r LZ ðQ jRÞ ¼ 1. If all characters in Q do not belong to R, the result is r LZ ðQ jRÞ ¼ lðQ Þ.Genome rearrangement is an important area of computational biology. The goal is to find the shortest sequence of genome arrangements operations that transform one genome into another. There are several basic operations: reversal, translocation and transposition. Traditional sequence alignment methods can only operate locally (e.g. insert, delete, replace) and thus ignore aspects of global sequence information (e.g. reversal, translocation, transposition). For example, the sequence Q = AAAAAAAAGGGGGGGG is converted to R = GGGGGGGGAAAAAAAA by reversal. We use CLUSTAL 2.1 to compare these two sequences. The result is A A A A A G G G G G G G G  