Iterative sequence profile searches were run using the PSI-BLAST program (26) against the non-redundant (nr) protein database of National Center for Biotechnology Information (NCBI). Similarity based clustering for both classification and culling of nearly identical sequences was performed using the BLASTCLUST program (ftp://ftp.ncbi.nih.gov/blast/documents/blast clust.html). The HHpred program was used for profileprofile comparisons (27) . Structure similarity searches were performed using the DaliLite program (28) . Multiple sequence alignments were built by MUSCLE (29) , PROMALS (30) , KALIGN (31) and PCMA (32) programs, followed by manual adjustments on the basis of profile-profile and structural alignments. The consensus for alignments were calculated and colored by the Chroma program (33) . Secondary structures were predicted using the JPred and PSIPred programs (34, 35) . For earlier known domains the PFAM database (36) was used as a guide, though the profiles were often augmented by addition of newly detected divergent members that were not detected by the original PFAM models. Clustering with BLASTCLUST followed by multiple sequence alignment and further sequence profile searches were used to identify other domains that were not present in the PFAM database. Signal peptides and transmembrane segments were detected using the TMHMM and Phobius programs (37, 38) . Contextual information from prokaryotic gene neighborhoods was retrieved by a PERL custom script that extracts the upstream and downstream genes of the query gene and uses BLASTCLUST to cluster the proteins to identify conserved gene-neighborhoods. Phylogenetic analysis was conducted using an approximately-maximum-likelihood method implemented in the FastTree 2.1 program under default parameters (39) . The Modeller9v1 program (40) was utilized for homology modeling of the structure of the IRS1 N-terminal domain. Structural visualization and manipulations were performed using VMD (41) and PyMol (http://www.pymol.org) programs. The in-house TASS package, a collection of PERL scripts, was used to automate aspects of large-scale analysis of sequences, structures and genome context (Anantharaman, V., Balaji, S., and Aravind, L., unpublished data  