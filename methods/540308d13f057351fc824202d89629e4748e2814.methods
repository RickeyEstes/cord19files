Results were produced through four main phases. Phase 1: Road network cleaning and weighted adjacency list production: the road cleaning operation aimed to produce a road network from the georeferenced vectorial network of roads infrastructure. This phase was conducted using ESRI ArcMap 10.4 (http://desktop.arcgis.com/en/ arcmap/) through the use of the topological cleaning tool. The tool integrates contiguous roads, removes very short links and removes overlapping road segments. Road junctions were created using the polyline to node conversion tool, while road-link association was computed using the spatial join tool. Malaria prevalence values were assigned to each road using the spatial join tool. The adjacency matrix output, containing also the coordinates for each road junctions, was extracted in form of text file. Phase 2: Conversion from the primal to the dual network: the primal network created in phase 1 was then used as input for a continuity negotiation-like algorithm. The goal of this algorithm was to translate the primal network into its dual representation (see Fig. 2a,b) . The implementation of the negotiation-like algorithm used the iGraph library in C++ (http://igraph.org/c/) on an octa-core iMac. The conversion took around 20 hours for a primal network with ~200 k nodes running. The algorithm works by first identifying roads composed of many contiguous edges in the primal space. Two primal-edges are assumed to be contiguous if the angle between them is not greater than 30Â° degrees. Because the dual representation generated by the algorithm strongly depends on the starting edge, we started by looking for the edge that produces the longest road. As soon as this edge was found, a dual-node was created to represent that road. Next we proceeded to look for the edge that produced the second longest road and create a dual-node for that road. We continued this process until every primal-edge had been assigned to a road. Finally, dual-nodes were connected to each other if their primal counterparts (roads) crossed each other in the primal space. Phase 3: Community detection: we used a traditional modularity optimization-based algorithm to identify communities in the dual representation of the road network. The modularity metrics were computed in R using the iGraph library (http://igraph.org/r/). To incorporate the prevalence of malaria, we used the malaria prevalence values as edge weights for community detection. Phase 4: Mapping communities. Detected communities were mapped back to the primal road network with the use of the spatial join tool in ArcMap. All maps were produced in ArcMap. 