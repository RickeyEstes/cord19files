The Matlab routine bvp4c (implementing the three-stage Lobatto IIIa formula) was used to solve the two-point boundary-value problem (4.42) -(4.46) forfðsÞ andf 1 , subject to (4.48) -(4.52) ats ¼ e ( 1 and (4.47) ats ¼S ) 1. Numerical results were verified by comparison with a Cþþ shooting program that implements Runge -Kutta integration and Newton's method (based on algorithms from Numerical recipes [77] ) and integration with ode45 in Matlab. Condition (4.47) is applied at a large valueS ofs: in practice, S ¼ 20 proved more than sufficient for far-field behaviour to become clear. Near the origin, e ¼ 0:001 proved sufficiently small for accurate results. The solution of the system is not unique, although we ever found only one physically appropriate solution for any set of parameters ða; b;T 0 Þ. (Other solutions all resulted in self-intersecting membrane curves, and so had to be rejected.) The appropriate solution is tracked through ða; b;T 0 Þ parameter space by changing the relevant parameters incrementally and applying previous solution for f 1 as the initial condition for subsequent numerical estimates. The relative length scales of the problem, and model dynamics, are determined by the parameters of the system. These are taken from the literature-see § §4.6 and 4.7 for full details; the estimated (range of ) values for each parameter are given in table 3. 


Section:numerical methods