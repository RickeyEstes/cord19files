Backward method attempts to solve the inverse NS equation by a direct inversion such as with a negative time step in the timemarching problems. However, the simple direct solution is impossible because the actual world is not reversible. A viable solution imposes a reduction in entropy that is against the secondlaw of thermodynamics. Thus, the governing equation has to be twisted to avoid solving directly the inversed governing equation. The modified method can be the quasi-reversibility and pseudoreversibility method. The quasi-reversibility method solves the irreversible governing equation using a stabilization technique. This method was first used to solve ill-posed partial differential equations for heat conduction problems [15] . It was also used to solve the inverse heat conduction in a quasi-boundary-value-problem variant of the original formulation [21] . Later, the method was applied to identify groundwater contaminant sources [22] . To identify a contaminant source by using the contaminant information detected by a sensor, one could inversely solve the governing species transport Equation (1) . The inversion to Eq. (1) is ill-posed because the time-forward process is dispersive and an inversion to a dispersive process is unstable. The quasi-reversibility method replaces the most unstable diffusion term with a fourth-order term, as shown in Eq. (2) [23] . Then the equation can be solved reversibly. where j is the species concentration, t is forward time, i.e., Dt > 0, x i is the coordinate, u i is a velocity component, G j is the diffusion coefficient, t is backward time, i.e., Dt < 0, and ε is stabilization coefficient which determines the strength of stabilized operation. The above quasi-reversibility method was demonstrated to identify a gaseous pollutant source in an aircraft cabin released at floor level from t ¼ 0e0.04 s according to the scenario shown in Fig. 2(a) . The contaminant concentration distribution at t ¼ 6 s provided by a forward CFD simulation, as shown in Fig. 2(b) , was used as the initial condition to conduct the inverse simulation. method becomes dispersive, the location of the contaminant source can be identified. The quasi-reversibility method was also extended to inversely locate an airborne particle source [24] . The quasireversibility method requires a known flow field as the priori, because Eq. (2) is only for the species concentration. However, if a design of an enclosed environment also requires the inverse prediction of the flow field, this method is not applicable. Instead of reversing time as in the quasi-reversibility method, the pseudo-reversibility method solves inverse contaminant transport with reversed flows. The pseudo-reversibility method also requires a known flow field as the priori. Kato et al. [16, 25, 26] used the method to assess local pollution from upwind regions with backward trajectory analysis of the flows in the atmospheric environment. The method has also been used in groundwater contaminant transport [27, 28] , where both convection and diffusion transport of contaminants is solved with flow reversion. Zhang and Chen [29] compared the pseudo-reversibility method with the quasi-reversibility method in the inverse identification of a contaminant source in an aircraft cabin. They found that both methods were dispersive, and accuracy was poor if there was significant diffusion in contaminant transport. The regularized inverse matrix method performs an inversion to the cause-effect governing matrix A and improves the stability of the inverse operation by regularization. Suppose the release rate vector q and the concentration response vector C can be described by Eq. (3). Since the matrix is ill-posed, a regularized matrix L is added, and the strength of the regularized operation is controlled by a regularized coefficient l [17, 30] . With an appropriate l, the release rate q can be solved once a C is provided (Eq. (4)). The causeeffect matrix A is a function of the flow, source, and sensor location. More details on calculation of the matrix A with the convolution theory can be found in Refs. [31e33]. where the superscript T in Eq. (4) represents the transpose operation. The regularized matrix L is usually taken as the second-order time derivative format [33] , which is well posed and reversible. Zhang et al. [33] applied this method to inversely quantify the temporal rate profile of a continuously released gaseous pollutant source on the basis of limited sensor information in an office. As shown in Fig. 3 (a), a gaseous contaminant was released at the head level of an occupant; the corresponding temporal release rate is represented by the black line in Fig. 3 (c). The gas concentration ( Fig. 3 (b)), as monitored by a sensor located at the outlet, was used as input for the inverse simulation. As shown in Fig. 3 (c), the temporal release rate identified by the method (in the red line) agrees well with the actual rate. In summary, backward methods are applicable for solving the reversed scalar transport equations and work well in inverse identification of a contaminant source. The primary limitation of the backward methods is that they only provide an approximate solution and require a known flow field. The inverse design of an enclosed environment usually requires inverse prediction of the flow field, in which case backward methods are not applicable or need further development. The computing costs for the backward methods are similar to typical CFD simulations plus a continued simulation of species dispersion. Therefore, the backward methods are affordable for most indoor environment studies. This section discusses the forward methods based on the NS equations with CFD simulation techniques for inverse design. These methods have more extensive applications than the backward methods. Forward methods can be further classified primarily as the CFD-based adjoint method, the CFD-based genetic algorithm method, and the POD analysis method. The first two methods integrate CFD with an optimization algorithm, and the last method uses a reduced-order model to lower computing costs for CFD simulations. Forward methods convert an inverse design problem to a control problem by constructing an objective function. Various objective functions can be constructed for a design objective. For example, if the design objective is to reach a good thermal comfort in an occupied space, the objective function, O, can be constructed using the predicted mean vote (PMV) value that is function of air velocity, temperature, and relative humidity distributions in the occupied zone, such as: where x is a vector that represents the design variables (e.g., supply air velocity and temperature) and U is the occupied zone volume. Inverse design identifies the optimal x that minimizes O(x) (i.e., neutral thermal condition). The design approach varies with the used forward method.  The adjoint method computes the derivative of the objective function (Eq. (5)) over the design variables, x, so that the method can search the direction for gradually minimizing the objective function. Because of the strong nonlinearity in the NS equations, the derivative dO/dx cannot be straightforwardly computed. The adjoint method introduces a Lagrange multiplier with p a as adjoint pressure, U a as adjoint velocity, T a as adjoint temperature, and j a as adjoint scalar. The Lagrange multiplier can transform the constrained control problem into an unconstrained control problem. The augmented objective function can be reformulated as: where Q represents the flow domain and N ¼ (N 1 , N 2 , N 3 , N 4 , N 5 , N 6 ) T represents the NS equations in vector form (N 1 the continuity equation; N 2 , N 3 , and N 4 the momentum equations; N 5 the energy equation; and N 6 the scalar transport equation). One can refer to Othmer et al. [34] for the final form of the adjoint equations. To minimize the objective function on the design variables requires solving the following equation by gradually adjusting design variable x: The adjoint method can be very efficient in finding an optimal solution, although the method may identify the local optima. The adjoint method has been used in various fields since it was first introduced by Lions [35] for systems governed by partial differential equations. Pironneau [36] was the first to use the adjoint method for design in fluid dynamics. Jameson [37, 38] applied the adjoint method in aerodynamic design with the aim to find the geometry that would minimize drag. Jameson [39] and Reuther et al. [40, 41] developed the adjoint approach for the airfoil optimization, wing design, and complete aircraft configurations. A number of other research groups have developed various adjoint CFD codes for design optimization [42e44]. The method is successfully applied in heat transfer problems, shape optimization, and pollution source identification. For the inverse reconstruction and design problem in an enclosed environment, Liu and Zhai [45, 46] developed the adjoint method to locate an instantaneous or dynamical indoor contaminant source. Liu and Chen [47] established a CFD-based adjoint method for the optimal design of indoor airflow with thermo-fluid boundary conditions as the design variables and flow and/or temperature fields as the design objective. This study found that different initial inlet air conditions led to different optimal inlet air conditions, which implies the existence of multiple solutions. Later, Liu et al. [48] included the air supply location and size as design variables. In a two-dimensional non-isothermal ventilated cavity case [49] as shown in Fig. 4(a) , matching the simulation results with measured air velocity and temperature on the red dashed lines were used as the design objective. Fig. 4(b) and (c) show, respectively, the computed flow field with the initially guessed and the finally identified air supply location, size, and parameters. The design procedure required only 16 adjustments of the design variables, automatically performed during a single computation. The inlet location was inversely identified with reasonable accuracy for the targeted air velocity and temperature profiles at the two sections. The study also found that the computing costs did not vary with the number of design variables. As another optimization approach, the genetic algorithm (GA) was first introduced by Holland [19] in the 1970s. GA is a gradientfree optimization method that simulates natural evolution in the search of optimal solutions. In order to perform evolution operations on design variables, GA must encode design variables into a string, which is called an individual. A collection of individuals constitutes a population. GA optimizes the solution with evolution (or iteration) of the population. A fitness value (the value of the objective function) quantifies the "goodness" of an individual. According to the number of objective functions, GA can be classified as a single-objective genetic algorithm (SOGA) or a multi-objective genetic algorithm (MOGA) [50] . A number of studies have improved the genetic algorithm method. For instance, Grefenstette [51] succeeded in increasing the efficiency of a genetic algorithm by adjusting its parameters with another genetic algorithm. Horn et al. [52] developed the tournament selection technique for the selection process, which increased the distinguishability of the algorithm. Srinivas and Patnaik [53] developed the adaptive genetic algorithm, in which the probabilities of crossover and mutation can be varied depending on the fitness values of the solutions. This new method can converge to the global optimum in far fewer generations with lesser likelihood Fig. 3 . Demonstration of the regularized inversed matrix method in a release of a tracer gas in an office room to simulate a contaminant from human respiration: (a) threedimensional layout of the room, (b) monitored tracer gas concentration at the outlet, and (c) inversely identified temporal release rate compared with the actual release rate [33] . of falling into local optima. Genetic algorithms inherently tend to produce a set of proper solutions, and Karr et al. [54] recognized this potential in their development of regression correlations and applied genetic algorithms using least-squares curve-fitting techniques. Researchers have also attempted to increase the convergence speed without reducing the capability of a genetic algorithm in searching optimal global multi-solutions for multiple objectives. On the basis of the vector-evaluated genetic algorithm proposed by Schaffer [50] , other groups have made the genetic algorithm more capable of multi-objective optimization [55e57]. Genetic algorithms have been used in various industrial and engineering applications, such as machine learning [58] , urban planning [59] , chemical kinetics reaction mechanisms [60e62], and pollutant source identification in groundwater [63, 64] . In application to buildings, Huang and Lam [65] used the genetic algorithm for automatic tuning of controllers in HVAC systems, and Wright et al. [66] identified pay-off characteristics between the building energy cost and the occupant thermal discomfort. Nassif et al. [67] minimized energy use and maximized comfort in multiple zones with high loads. Fong et al. [68] set suitable operating parameters for an HVAC system without sacrificing thermal comfort, and Ma and Wang [69] developed a supervisor and optimal control strategy for energy efficiency. The application of genetic algorithms in heat transfer and fluid flow started in the 1990s, such as the work by Queipo et al. [70] . This is probably due to the relatively long computational time in these applications. Other applications include heat exchange performance [71e73], airfoil design [74, 75] , car shape design [76] , airflow field optimization of a melt blowing slot die [77] , and geometric optimization of a gas turbine transition piece [78] . Malkawi et al. [79] were probably the first to combine CFD with a genetic algorithm for indoor environmental design. Kato and Lee [80] applied a similar approach to optimizing a hybrid airconditioning system with natural ventilation. Xue et al. [81] implemented the inverse prediction and optimization of flow control conditions for confined spaces. Further, Zhai et al. [82] optimized flow control conditions for a confined space (Fig. 5(a) ) by satisfying multiple design indices, such as PMV, percentage dissatisfied with the draft (PD), and mean age of air. If the design objective is to have PMV ¼ 0, PD < 15%, and mean age of air less than 125 s on the design domain represented by the circles in Fig. 5(a) , then all points on the curve of PMV ¼ 0 shown in Fig. 5 (b) satisfy the first condition. The PMV ¼ 0 and PD ¼ 15% curves intersecting at point Q2 meet the second condition with a supply air velocity of 1.75 m/s and air temperature of 24.2 C. The curve of the mean age of air at 125 s intersecting with the curve of PMV ¼ 0 at Q1 satisfies the third condition with a supply air velocity of 1.11 m/s and air temperature of 22.69 C. As a result, any design along the red line between Q1 and Q2 would meet the design objectives. Since the indoor environment design is a multivariable, multi-solution, multi-objective problem, the genetic algorithm can identify the global optima. Nevertheless, the CFDbased genetic algorithm method requires many CFD simulations during the population evolution, and the computational effort increases by orders of magnitude with an increase in the number of the design variables. An optimal design of an indoor environment using GA can take a week or more to reach the final solutions, depending on the case sophistication and accuracy requirements. An option for reducing the CFD simulation effort is to apply the proper orthogonal decomposition (POD) method [20] . The POD method provides a quick approach to describing forward mapping of a thermo-fluid distribution from various boundary setting conditions. POD establishes a basis for the modal decomposition of an ensemble of data, such as thermo-flow fields obtained from CFD simulations or measurements. A thermo-flow field can be expressed as a combination of the orthogonal spatial modes with their amplitudes or coefficients [83] , as follows: where F c is the constructed field, c k is the amplitude or coefficient of the spatial mode 4 k , k is the index of the spatial mode, and K is the number of required spatial modes. To reduce the effort required to solve for the spatial modes, Sirovich [84] proposed the snapshot method for extracting the spatial modes as samples. Generally, the number of snapshots is far less than the number of spatial grid points, so considerable computing expense can be saved. The spatial mode is calculated as a combination of each snapshot field with its coefficient as: where a s is the coefficient of a snapshot field F s , and S is the number of snapshots. Once the coefficients of the spatial modes are provided, a field can be constructed on the basis of Eq. (8) . According to the orthogonality principles, the coefficient of a spatial mode corresponding to a snapshot field is: The coefficients of the POD modes can correspond to a number of causal variables, for example, the air-supply parameters. By interpolating the coefficients for the rest air-supply parameters that are not used to extract the POD modes, the rest thermo-flow distribution can be instantly constructed. The POD analysis was first proposed by Lumley [20] nearly a half-century ago to analyze the structure of inhomogeneous turbulent flows. Later, this technique became popular in both experimental and numerical fluid mechanics. Citriniti and George [85] utilized the POD method to analyze the measurement data provided by a hotwire anemometry in a turbulent shear layer. Lam [86] used POD to construct the measured velocity and concentration distributions of a round jet. Early applications of the method for numerical fluid dynamics were for near-wall and jet-induced mixing flows [87e89]. Later, POD was applied to predict some basic fluid flows and heat transfer. For example, Cazemier et al. [90] used POD to construct a low-dimensional model for cavity-driven flows, in which 80 spatial modes were extracted from 700 snapshots. Couplet et al. [91] proposed a calibrated reduced-order POD-Galerkin model to predict the flows around a square cylinder and past a backward-facing step, respectively. Ding et al. [92] proposed the POD-based data interpolation strategy to predict the thermoflow fields for natural convection and forced convection flows. Liberge and Hamdouni [93] investigated the dynamic flow induced by a rigid oscillating cylinder. The POD-based adaptive controller was also developed for real-time dynamic flow adjustment and prediction [94, 95] . For enclosed environments, POD is mainly used for fast prediction of indoor thermo-flow and pollutant concentration, optimization of air-supply parameters, development of controllers for dynamic ventilation control, etc. Elhadidi and Khalifa [96] applied the POD analysis to efficiently predict the velocity and temperature distributions inside an empty office. Sempey et al. [97] performed a POD-based prediction of temperature distribution in airconditioned rooms in a fixed-flow context. Allery et al. [98] tracked particle motion in a two-dimensional ventilated cavity where the inside airflow was provided by a POD construction. Li et al. [99] integrated a genetic algorithm into the POD prediction of thermo-fluid flow to efficiently optimize the air-supply velocity and temperature. Ahuja et al. [100] developed POD-based controllers to eliminate heat disturbance of an indoor environment by solar radiation, occupants, lights, etc. Tallet et al. [101] used the POD analysis to predict fluid flow and dynamically control the opening of a window in a two-dimensional ventilated cavity. Li et al. [102] proposed a POD-based temperature prediction model for dynamic control of room temperature. Wang et al. [103] developed a POD-based inverse design method to determine appropriate air-supply parameters in an enclosed environment. With a quick cause-effect mapping of the indoor environmental performance from boundary settings, the air-supply parameters that meet the design targets are identified. Fig. 6(a) shows a three-dimensional half cabin section in which the airsupply velocity and temperature for one slot opening were inversely determined. Fig. 6(b) shows the results for the left airsupply opening S 1 that meet the design objective of jPMVj<0.5 in the head (brown) region in Fig. 6(a) . The supply air velocity and temperature in the green dot area of Fig. 6 (b) can lead to satisfactory PMV in the head region. A full CFD simulation took approximately 8 h to solve a single case when providing the snapshot fields, while the POD required less than 2 s to construct a new case. This study used 40 CFD simulations to construct 2871 POD interpolations. The total computing time was 321 h, most of which was for the CFD simulations. If full CFD simulations were conducted, the computing time for 2871 CFD simulations would be 23,000 h. Thus, the POD method is very efficient. The computing costs of the forward simulations are generally much higher than those of the backward simulations. This is because tens or even hundreds of forwarded CFD simulations are needed. The adjoint method uses the same computing time regardless the number of the parameters solved, while the GA method is very sensitive to the number of the parameters. The GA method is thus more computational demanding for a complex problem. The POD method is far less expensive because it uses interpolation. However, the accuracy is not as good as the other two methods discussed here. 


Section:backward methods
Section:quasi-reversibility method
Section:pseudo-reversibility method
Section:regularized inverse matrix method
Section:forward methods
Section:cfd-based adjoint method
Section:cfd-based genetic algorithm method
Section:proper orthogonal decomposition method