The main quantitative result is that, to date, VADR has been used to evaluate hundreds of norovirus and dengue virus sequences submitted to GenBank. During intermediate phases of testing, we recorded in detail the fate of every submitted sequence into six categories. Among 922 norovirus sequences submitted in 2019 during this phase, 898 (97%) were accepted automatically, 8 were accepted by an indexer without changes, 8 were accepted by an indexer after making changes, and 8 were sent back to the submitter. Among 1702 dengue virus sequences submitted in 2019, 1602 (94%) were accepted automatically, 6 were accepted by an indexer without changes, 83 were accepted by an indexer after making changes, 8 were sent back to the submitter, and 3 had a more complicated fate. After VADR was put into full production usage for norovirus, the record-keeping was reduced to record only how many sequences are evaluated by VADR and how many sequences pass or fail. Among 3143 norovirus sequences evaluated by VADR in production mode, 2809 (89%) passed while 334 (11%) failed. If these data are representative of norovirus and dengue virus submissions, the expected reduction in the number of sequences that need to be manually reviewed by NCBI indexers (which prior to development of VADR was 100%) will be about 10-fold for norovirus submissions and about 15-fold for dengue virus submissions. The main qualitative result is that we defined in one place all the checks that GenBank indexers want to do on the nucleotide sequences of incoming virus submissions. We defined cautious operational semantics, summarized in AND 50:20000[slen] Distinct "complete genome" and "partial" sequence datasets were created to distinguish behavior on likely complete genomes from behavior on likely partial sequences. To separate the likely complete genomes, we used the empirical cumulative distribution functions of how many sequences returned by the above queries have each length, x, and are (not) annotated as "complete genome". The selected thresholds were > 7380nt and > 10, 371nt for norovirus and dengue virus, respectively because almost all sequences labeled "complete genome" exceed these lengths. However, there were 5 norovirus and 27 dengue virus sequences shorter than these threshold lengths returned by the above Entrez queries that are annotated "complete genome". Therefore, we revised the queries partitioning each sets of lengths into two disjoint intervals by using the "[slen]" attribute. We refer to the four datasets or selected subsets thereof as "NP", "NC", "DP", and "DC" for Norovirus-Partial, Norovirus-Complete, Dengue-Partial and Dengue-Complete. 32, 190 and 20,973 sequences respectively. Queries 2 and 4 retrieved lists of 1384 and 4580 sequences respectively. The partial sequences far outnumber the complete sequences for these two taxa. For this reason, we avoided design decisions in VADR that would rely on any specific part of the genome being present. The sets of sequences returned by these queries could shrink over time if sequences are modified in the future. Two choices in our queries may be unexpected and deserve further explanation. First, we put the upper bound "2017" on the date because in 2018 we began using VADR to screen incoming sequences, so it would be unfair to include these more recent sequences in our testing here. In 2018, the versions of VADR were changing rapidly, so testing results from 2018 are omitted in the sequence counts at the beginning of Results, for which we started counting in January 2019. Second, we did not require that the strings Norovirus and Dengue be in the organism field, so as to include some sequences that could plausibly be misclassified taxonomically, and thereby test the behavior of VADR's classification module. For simplicity and except where evaluating classification errors, we refer to the sequences as "norovirus sequences" and "dengue virus sequences", even though some of them are known to belong to other taxa. We ran the VADR v1.0 v-annotate.pl script with default parameters on the four sequence datasets. Table 4 lists the number of passing and failing sequences for each dataset. Table 5 lists each type of fatal VADR alert observed in one of the four datasets with counts of instances reported and sequences for which one or more instances was reported. The most common alert, This article is a US Government work. It is not subject to copyright under 17 USC 105 and is also made available for use under a CC0 license. The copyright holder for this preprint (which was not peer-reviewed) is the author/funder. . https://doi.org/10.1101/852657 doi: bioRxiv preprint peptrans, occurs 6613 times in 1781 of the 59,127 sequences, approximately 3%. This alert does not indicate a unique problem itself, but rather is reported for mature peptides for which the parent CDS that is cleaved to form the mature peptide has a fatal alert, so it is redundant with at least one other alert. The next most common alert, noannotn, occurs for 2753 sequences, 2236 of which are in the DP dataset, indicating that no similar RefSeq was found for these sequences during the classification stage. Other alerts with more than 1000 instances include indf5pst and indf3pst which occur when the blastx protein-based alignment of a predicted CDS translation in the validation stage does not extend to with 5 nucleotides of the 5' or 3' ends of the nucleotide-based alignment. Thirty additional fatal alerts occur for at least one sequence. Four fatal alert types do not occur for any sequence: unexdivg would be reported in the rare case that a sequence was recognized as similar to a RefSeq but too divergent to align within memory requirements; lowsimis would be reported if a dissimilar region occured outside all predicted features, which is unlikely for norovirus and dengue virus which have features nearly along their full length; indfstrp would be reported if blastx reported similarity to a CDS region on the negative strand, when nucleotide similarity is primarily recognized on the positive strand, and incsbgrp would be reported if a sequence is recognized as not belonging to a specified subgroup (e.g. Norovirus genotype), but is never reported because we did not specify subgroups in our tests. This alert was added to fit the design of the NCBI submission interface for norovirus in which submitters are asked to specify the genogroup, and it is triggered only when VADR judges that the sequence belongs to a different genogroup. Showing that VADR catches problems not caught before is not sufficient to prove that VADR is necessary to check virus submissions to GenBank. There might be an existing software package that could be used for this purpose instead. Via literature search, we judged that two packages VAPiD [16] and VIGOR [17, 18] might be candidate alternative packages to check at least some submissions. Therefore, we compared the performance of VAPiD and VIGOR to VADR on randomly chosen sequences from the sets described above. From each of the four sets of sequences we randomly selected 200 to create four datasets of 200 sequences each for testing, with the condition that any sequence with 10 or more consecutive Ns, or with more than 50% ambiguous nucleotides was rejected from our sets of 200 because those sequences are flagged for manual review by NCBI indexers upon submission, outside the operation of VADR. VAPiD and VIGOR are designed optimistically to prepare submissions to GenBank, while VADR is designed more pessimistically to identify unexpected characteristics in submitted sequences. VAPiD and VIGOR do catch some errors, but neither package has an overall definition of a sequence passing or failing as VADR does. Therefore, as described below, we defined operational semantics of pass/fail in VIGOR and VAPiD to make them more comparable to VADR. Because of the different design purposes, we hypothesized beforehand that VAPiD and VIGOR would allow more sequences to pass and would ignore the milder alerts reported by VADR so that indexers can check questionable sequences manually. VAPiD is designed to simplify the submission of complete viral genome sequences to GenBank by adding metadata, and annotating each input sequence based on comparison with its best-matching reference sequence in a large reference dataset derived from Gen-Bank. Unexpected errors, such as premature stop codons, are detected and reported. VAPiD expects complete genome sequences [16] and we verified that it reports spurious errors on the majority of partial sequences. Therefore, here, we report VAPiD tests only on the NC and DC (complete) datasets. VIGOR annotates input sequences by first identifying the most relevant reference database in its collection and then comparing all reference protein and mature peptide sequences in that database to the input sequence to determine its annotation and to identify certain types of errors [17] . The version of VIGOR we tested (VIGOR3) lacks a Dengue virus database, so we tested VIGOR only on the Norovirus NC and NP datasets. Neither VAPiD nor VIGOR is currently designed to handle partial dengue virus sequences and this gives a simple justification for why VADR is needed to check dengue virus submissions. In addition, VADR annotates purely nucleotide (e.g. ncRNAs) features, which neither VAPiD nor VIGOR attempt to do. Nevertheless, we proceeded to compare VADR on the NC, NP, and DC sets of 200 sequences. Both VIGOR and VADR handle input files with multiple sequences even when some sequences have errors. In its present implementation, VAPiD stops when a sequence has the particular error of not finding a significant match to a sequence in its reference set, making VAPiD impractical for checking multiple sequnce submissions when This article is a US Government work. It is not subject to copyright under 17 USC 105 and is also made available for use under a CC0 license. The copyright holder for this preprint (which was not peer-reviewed) is the author/funder. . https://doi.org/10.1101/852657 doi: bioRxiv preprint This article is a US Government work. It is not subject to copyright under 17 USC 105 and is also made available for use under a CC0 license. The copyright holder for this preprint (which was not peer-reviewed) is the author/funder. . https://doi.org/10.1101/852657 doi: bioRxiv preprint at least one sequence has this error. Since we imagine that this design limitation could be overcome, we tested VAPiD one seqence at a time. To understand the operational semantics we imposed on VAPiD and VIGOR, it is necessary to begin with the point that they are designed to search the submitted sequence against one or more large databases of known sequences. These databases play a role somewhat analogous to the RefSeqs for VADR in that the best match in the database to the input sequence defines what features should be annotated. Because our tests used real sequences already in GenBank and the VAPiD and VIGOR databases also contain sequences already in GenBank, there turns out to be a nonnegligible probability that our query sequences are already "known to" VAPiD and/or VIGOR. For VAPiD, a sequence is considered to fail if: no reference matching it was found in the VAPiD database, the sequence was determined to be reverse complemented relative to the selected reference, or one or more "SEQ FEAT" errors was listed in the output errorsummary.val file; all other sequences were considered to pass. Errors observed in our testing are "SEQ FEAT.CdTransFail", "SEQ FEAT.NoStop", "SEQ FEAT.TransLen", "SEQ FEAT.StartCodon", and "SEQ FEAT.InternalStop". For VIGOR, any sequence that has no features annotated in the output .tbl file or for which one or more lines in the output .at file contained a code other than "OK", "T5" or "T3" in the seventh field was considered to fail and all other sequences were considered to pass. Failure codes observed in our testing are "ES" and "FS" for detected embedded stops and detected frameshifts, respectively. Table 6 shows the number of sequences that pass and fail with each of the three methods for the datasets on which they were tested. Table 7 further compares the results of VADR and VAPiD on the NC and DC datasets, and Table 8 further compares the results of VADR and VIGOR on the NC and NP datasets. The results highlight some important differences between the three programs, including the types of problems that can be identified in input sequences. In our tests of the NC and DC datasets, VAPiD fails 43 total sequences; 12 of these also fail VADR and 31 pass VADR and VIGOR (Table 7) . Of the 12, nine have In our tests of the NC and NP datasets, VIGOR fails seven total sequences, all seven of which also fail VADR (Table 8) . Of the seven, three have premature stops, two are reverse complemented (one of these is FV536857.1), one has a frameshift and one failed because no similar reference was found for it. Thus, we conclude that VADR successfully catches all the VIGOR-reported errors that should be caught. In our tests of the NC, NP, and DC datasets, VADR fails 53 sequences; 18 of these also failed VAPiD and/or VIGOR as mentioned above (exactly one sequence, FV536857.1, in the NC dataset failed all three methods), and 35 passed VAPiD and/or VIGOR (Table 8) . These 35 sequences have issues that were not flagged by either of the other two programs but that indexers would like to manually review before possibly accepting the sequences into GenBank. Those issues include: 16 sequences with early stop codons compared with the closest RefSeq (cdsstopn alerts), 12 sequences for which a blastx alignment in the protein validation stage does not extend close enough to the 3' This article is a US Government work. It is not subject to copyright under 17 USC 105 and is also made available for use under a CC0 license. The copyright holder for this preprint (which was not peer-reviewed) is the author/funder. . https://doi.org/10.1101/852657 doi: bioRxiv preprint boundary predicted from the nucleotide-based alignment (indf5pst or indf3pst alerts), ten sequences with low similarity to the RefSeq at the 5' or 3' end of the sequence or an annotated feature (lowsim5f, lowsim3f, or lowsim3s alerts), seven sequences where the 5' or 3' boundary of a feature is not aligned with sufficient confidence (indf5loc, indf5gap, or indf3loc alerts), five sequences that are expected to be Norovirus but are classified as Sapovirus, another Caliciviridae genus (incgroup alerts), five sequences with too large of an insertion or deletion in a blastx alignment (insertnp or deletinp alerts), and one sequence not recognized by any of the Caliciviridae or Flaviviridae models (a Salivirus from the Picornaviridae family, noannotn alert). Twelve of the 35 sequences had more than one of the above listed alerts. For the sequences with truncated blastx alignments, we observed that identical or similar truncated alignments were found in VIGOR, but in the current design of VIGOR, truncated nucleotide-to-protein alignments do not trigger an error, at least in these cases. In the DP dataset, for which only VADR was tested, 37 sequences failed. Twenty-eight failed because no similarity to any RefSeq in the reference library is detected (noannotn alert). Twenty of these are likely not dengue virus sequences but rather from Aedes aergypti or Aedes albopictus, the mosquito vectors of Dengue virus as they contain one of those species names in the sequence description. Three of the other nine sequences that failed did so because they are reverse complemented (revcompl alert). Three others fail because the blastx alignments do not extend far enough relative to the nucleotide-based CDS endpoints (indf5pst or indf3pst alerts). One failed because it has an internal stop in the polyprotein CDS (cdsstopp alert). One failed because its stem loop feature that is upstream of the CDS lacks similarity to the RefSeq in the first 30 nucleotides (lowsim5f alert). The final sequence fails because it is classified as coming from a different species in family Flaviviridae, namely West Nile virus (incgroup alert). The three programs differ in the size of the reference databases they use to map annotation onto input sequences. VADR's reference library includes nine norovirus RefSeqs and four dengue virus Ref-Seqs. VAPiD's reference library contains more than 800 norovirus and more than 4000 dengue virus sequences. VIGOR's library contains more than 200 total norovirus proteins (polyprotein, VP1 and VP2) and more than 50 norovirus mature peptides. Because of VADR's role in controlling which sequences are automatically entered into GenBank and how those sequences are annotated, having trustworthy and consistent annotations in the reference library is crucial. We chose RefSeqs as the basis for our library for this reason, after reviewing, updating and in some cases creating new RefSeq records with the intention that they would serve as references to the wider research community beyond the scope of VADR-based annotation. Larger libraries are more likely to contain mistakes or anomalies that should not be mapped onto incoming sequences that may be automaticlly deposited in GenBank. An example is the sequence FJ446720.1 from the NC dataset, which is in the VAPiD reference library but lacks annotation of the VP1 CDS. Both VADR and VIGOR fail this sequence due to a premature stop in the putative VP1 CDS, but it passes VA-PiD because its reference sequence (itself) lacks VP1 annotation and so the VP1 region is not examined for premature stops. This sequence may be biologically valid, but should be reviewed by GenBank indexers as opposed to being automatically deposited into Gen-Bank. On the other hand, a larger reference database can contain more diversity than a smaller one, and the most common VADR failure in the NC dataset is due to an early stop codon in the nonstructural polyprotein CDS by three nucleotides (11 of the 16 cdsstopn alerts in the set of 35 sequences mentioned above). This failure may have been avoided with a larger reference database that included a norovirus sequence with this three nucleotide shorter CDS variant (an example is AB933745.1). We plan to add to VADR's reference library as we find areas of sequence space that it does not adequately cover. We also plan to extend VADR to use profiles built from multiple alignments instead of single sequences which should enhance its ability to analyze and annotate some sequences that are divergent from available RefSeqs. The above discussion focuses on failing sequences, and does not address the validity of passing sequences or the correctness of their annotation. In our testing of VADR since May 2018, indexers have manually reviewed the sequences that pass VADR and have largely agreed that they should indeed pass. Where they have disagreed, we have modified VADR during its development to fail the sequences in question. Additionally, in our testing of the NP and NC datasets, when VADR and VIGOR both pass a sequence they nearly always have the same annotations: 703 of the 705 (99.7%) of the CDS annotations with consistent product names (VP1, VP2 or nonstructural polyprotein) had identical coordinates in the VADR and VIGOR output. As noted above, VAPiD and VIGOR do not attempt to annotate features other than coding sequences: both annotate CDS, and VIGOR annotates mat peptides. VADR has the added capability of annotating any sequence feature that is also annotated in the Ref-Seq, including structural RNA elements, and we added This article is a US Government work. It is not subject to copyright under 17 USC 105 and is also made available for use under a CC0 license. The copyright holder for this preprint (which was not peer-reviewed) is the author/funder. . https://doi.org/10.1101/852657 doi: bioRxiv preprint stem loop and ncRNA features to the four dengue virus RefSeqs in preparation of VADR use for dengue virus sequence submissions. In the set of 4171 sequences that passed VADR in the full DC dataset of 4580 sequences, VADR annotated between 4 and 9 stem loop features and exactly 1 ncRNA feature in each sequence for a total of 35,676 stem loop features and 4171 ncRNA features. In the set of 17,276 sequences that passed VADR in the full 20,973 DP dataset, VADR annotated between 1 and 6 stem loop features in 2335 sequences, and exactly one ncRNA feature in 623 of those 2327 sequences for a total of 5157 stem loop features and 623 ncRNA features. In summary, to allow for automatic processing of high quality virus sequences, VADR is designed to identify when sequences deviate from the closest Ref-Seq in various ways and construct informative alerts and output messages about those deviations. VADR catches all the problems that VAPiD and VIGOR catch and numerous other problems. 