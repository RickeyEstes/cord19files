We created LAMP signatures with both LAVA and Pri-merExplorer for comparison. The locus we targeted is an 800 base-pair long sequence of Staphylococcus aureus, starting at base 2464089 of the RF122 genome [GenBank: NC_007622.1] at the 3' end of gltA through the 5' start of gltB. This locus is interesting to us because it is a place where a KPATH [7] run identified a TaqMan signature candidate that is both conserved among all targets, and is unique to the targets compared to all other known sequence, which makes this candidate region potentially valuable for S. aureus detection. Input for signature design was a sequence representation of all the genome sequences in Table 2 . Eiken's PrimerExplorer was run with default parameters. LAVA was run with parameters designed to be similar to the PrimerExplorer defaults, but with an adjusted melting temperature target range to compensate for the difference in calculated temperatures between Primer3 and PrimerExplorer. These parameters specifically allow a wider acceptable TM range from LAVA's defaults, and a longer poly-base limit. The best scoring signature results from both programs are provided in Table 3 . The LAVA selection for a lamp signature is nearly identical to the PrimerExplorer selection, as seen in Figure 3 . We believe the variations between result sets are the result of subtle differences in calculation methods for primer metrics, and would not represent a significant difference in signature behavior. It is likely that LAVA penalizes T m differences slightly more than Pri-merExplorer. The result is that LAVA's top signature selection has a slightly smaller range of melting temperatures. As an additional example case, we've also created LAMP signature candidates for Mycobacterium tuberculosis, as listed in Table 4 , using default LAVA parameters. We have not screened these in the laboratory, but they represent conserved and unique signatures that we believe would make sensitive and specific detection assays, similar to some of the assays in Iwamoto et al. [9] . A pre-computed MSA of all 25 completed Mycobacterium tuberculosis genomes available was used as input, including known drug-resistant genomes, and non-unique regions were masked out so only unique sequence is used for signature design. Operationally, LAVA has fulfilled our needs, but there are several components that are worthy of further attention. This discussion explores aspects of LAVA's design and operation that we believe will improve or augment LAVA's performance the most. LAVA currently excludes dimerization checks during primer selection, which would contribute to the relative scores of signature candidates. This would have been accomplished using the UNAFold [10] libraries to analyze inter-oligo interactions, and primer self-annealing. This is currently omitted because in some instances, the increase in required processing time to analyze primer combinations was unacceptable. Predicting inter-oligo hybridization is still a serious concern with regards to LAMP signature design, so we separately perform dimerization analysis on the finished signature candidates, and avoid using candidates with high dimerization potential. We will include dimerization checks as part of the native signature design when possible. There are two primary options for controlling the number of primer combinations that need to be analyzed. The first is limiting the number of primer candidates that Primer3 can identify in each execution. This can be accomplished by narrowing the acceptable range of primer design parameters such as length and melting temperature. Primer3 output can also be limited by explicitly setting a maximum number of primers for Pri-mer3 to generate. The second option is to set stricter primer overlap limits. Stringent overlap limits may make it possible to perform the comprehensive dimerization checks discussed above within reasonable processing times. We have observed through computer predictions including [10] , that an optional linker sequence, used to connect the two components of the FIP and BIP (F1c and F2, and B1c and B2 respectively), has the potential to disrupt the LAMP reaction. In general, calculations based on a "TTTT" linker sequence predict a slight increase in sensitivity in many of the likely hybridization configurations, because of a slightly longer and more stable base pairing at the 5' end of the hybridization. However, in one instance, this linker greatly increased predicted primer self-hybridization because of an unfortunate co-incidence of self-similar sequence. The chance of this being a problem increases if the number of consecutive identical bases in the designed primers cannot be limited. Improper choice of linker sequence can also increase predicted primer dimerization. A more contextaware linker design should yield better results than always using a single linker sequence. One day, we hope LAVA will suggest the most appropriate linker sequence, or omission of the linker, for each designed signature, to help support desired assay behavior. One potential approach is to design linkers that are the least complimentary to the loop regions adjacent to the F1 region in the LAMP dumbbell structures as possible. Another potential approach is to design linker-free primers like Poon et al [11] , which is currently the default behavior of LAVA. When designing LAMP signatures, we found there is a general pattern we fell into of relaxing design parameters to identify signatures for difficult to target sequences. On average, the order which we adjusted parameters were to increase melting temperature range, decrease primer minimum length, and finally to increase signature max length. The LAVA wrapper SLAVA was implemented as a serial execution of individual MSA segments. This is provided to enable signature design for long sequences such as whole bacterial genomes, and also to demonstrate how a parallel implementation would be structured. During the further development of LAVA, we hope to transition into a high-performance grid computing environment with a parallel LAVA implementation. We are separately developing a OligoEnumerator for creating primers with degeneracy, which are primers with base variations designed to accommodate strain variation. So far, we have used a "masked" MSA representation of the target to design signatures. However, since Primer3 does not accept sequence containing the standardized IUPAC character codes, the MSA representation has so far been limited to perfect consensus sequence. The fundamental difference in approach for designing primers with degeneracy, is that primers are enumerated based on all the sequences of the MSA, instead of based on only the first sequence. Our proof of concept requires different internal representations of sub-sequence MSAs, but is built using the existing Oli-goEnumerator and PrimerAnalyzer interfaces. 